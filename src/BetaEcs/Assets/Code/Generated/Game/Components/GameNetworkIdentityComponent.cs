//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Beta.NetworkIdentityComponent networkIdentity { get { return (Beta.NetworkIdentityComponent)GetComponent(GameComponentsLookup.NetworkIdentity); } }
    public bool hasNetworkIdentity { get { return HasComponent(GameComponentsLookup.NetworkIdentity); } }

    public void AddNetworkIdentity(Mirror.NetworkIdentity newValue) {
        var index = GameComponentsLookup.NetworkIdentity;
        var component = (Beta.NetworkIdentityComponent)CreateComponent(index, typeof(Beta.NetworkIdentityComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceNetworkIdentity(Mirror.NetworkIdentity newValue) {
        var index = GameComponentsLookup.NetworkIdentity;
        var component = (Beta.NetworkIdentityComponent)CreateComponent(index, typeof(Beta.NetworkIdentityComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveNetworkIdentity() {
        RemoveComponent(GameComponentsLookup.NetworkIdentity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherNetworkIdentity;

    public static Entitas.IMatcher<GameEntity> NetworkIdentity {
        get {
            if (_matcherNetworkIdentity == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.NetworkIdentity);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherNetworkIdentity = matcher;
            }

            return _matcherNetworkIdentity;
        }
    }
}
