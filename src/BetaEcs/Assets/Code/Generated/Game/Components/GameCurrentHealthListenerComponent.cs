//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentHealthListenerComponent currentHealthListener { get { return (CurrentHealthListenerComponent)GetComponent(GameComponentsLookup.CurrentHealthListener); } }
    public bool hasCurrentHealthListener { get { return HasComponent(GameComponentsLookup.CurrentHealthListener); } }

    public void AddCurrentHealthListener(System.Collections.Generic.List<ICurrentHealthListener> newValue) {
        var index = GameComponentsLookup.CurrentHealthListener;
        var component = (CurrentHealthListenerComponent)CreateComponent(index, typeof(CurrentHealthListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentHealthListener(System.Collections.Generic.List<ICurrentHealthListener> newValue) {
        var index = GameComponentsLookup.CurrentHealthListener;
        var component = (CurrentHealthListenerComponent)CreateComponent(index, typeof(CurrentHealthListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentHealthListener() {
        RemoveComponent(GameComponentsLookup.CurrentHealthListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentHealthListener;

    public static Entitas.IMatcher<GameEntity> CurrentHealthListener {
        get {
            if (_matcherCurrentHealthListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentHealthListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentHealthListener = matcher;
            }

            return _matcherCurrentHealthListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddCurrentHealthListener(ICurrentHealthListener value) {
        var listeners = hasCurrentHealthListener
            ? currentHealthListener.value
            : new System.Collections.Generic.List<ICurrentHealthListener>();
        listeners.Add(value);
        ReplaceCurrentHealthListener(listeners);
    }

    public void RemoveCurrentHealthListener(ICurrentHealthListener value, bool removeComponentWhenEmpty = true) {
        var listeners = currentHealthListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveCurrentHealthListener();
        } else {
            ReplaceCurrentHealthListener(listeners);
        }
    }
}
