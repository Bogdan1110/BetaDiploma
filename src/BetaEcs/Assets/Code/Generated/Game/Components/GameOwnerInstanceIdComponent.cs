//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Beta.OwnerInstanceIdComponent ownerInstanceId { get { return (Beta.OwnerInstanceIdComponent)GetComponent(GameComponentsLookup.OwnerInstanceId); } }
    public bool hasOwnerInstanceId { get { return HasComponent(GameComponentsLookup.OwnerInstanceId); } }

    public void AddOwnerInstanceId(int newValue) {
        var index = GameComponentsLookup.OwnerInstanceId;
        var component = (Beta.OwnerInstanceIdComponent)CreateComponent(index, typeof(Beta.OwnerInstanceIdComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOwnerInstanceId(int newValue) {
        var index = GameComponentsLookup.OwnerInstanceId;
        var component = (Beta.OwnerInstanceIdComponent)CreateComponent(index, typeof(Beta.OwnerInstanceIdComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOwnerInstanceId() {
        RemoveComponent(GameComponentsLookup.OwnerInstanceId);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOwnerInstanceId;

    public static Entitas.IMatcher<GameEntity> OwnerInstanceId {
        get {
            if (_matcherOwnerInstanceId == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OwnerInstanceId);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOwnerInstanceId = matcher;
            }

            return _matcherOwnerInstanceId;
        }
    }
}
